# DOCKERFILE ABSOLUMENT DÉFINITIF POUR DOKPLOY
FROM node:20-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json package-lock.json ./
RUN npm ci

FROM node:20-alpine AS builder
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# ÉTAPE 1: Corriger le CSS DÉFINITIVEMENT
RUN cat > assets/globals.css << 'EOF'
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ebe7e1;
  --foreground: #1E1E1E;
  --primary: #6D3FC8;
  --primary-foreground: #ffffff;
  --secondary: #F5F5F5;
  --secondary-foreground: #1E1E1E;
  --muted: #F5F5F5;
  --muted-foreground: #6B7280;
  --accent: #F3F4F6;
  --accent-foreground: #1E1E1E;
  --destructive: #EF4444;
  --destructive-foreground: #ffffff;
  --border: #E5E5E5;
  --input: #E5E5E5;
  --ring: #6D3FC8;
  --radius: 0.5rem;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-poppins), system-ui, sans-serif;
}

* {
  border-color: var(--border);
}

body::before {
  content: "";
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: -1;
  background: var(--background);
}
EOF

# ÉTAPE 2: Supprimer le middleware problématique
RUN rm -f middleware.ts middleware.js

# ÉTAPE 3: Créer un script de démarrage interne
RUN cat > /app/start-production.sh << 'EOF'
#!/bin/sh
echo "🚀 FORÇAGE DU MODE PRODUCTION POUR DOKPLOY"
echo "NODE_ENV=$NODE_ENV"
echo "PORT=$PORT"

# Si Dokploy essaie de lancer npm run dev, on intercepte
if [ "$1" = "npm" ] && [ "$2" = "run" ] && [ "$3" = "dev" ]; then
    echo "❌ INTERCEPTION: Dokploy essaie de lancer dev mode"
    echo "✅ REDIRECTION: Lancement en mode production"
    exec node server.js
else
    # Sinon on lance normalement en production
    exec node server.js
fi
EOF

RUN chmod +x /app/start-production.sh

# ÉTAPE 4: Build en production
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_ENV production
ENV MONGODB_URI mongodb://localhost:27017/temp

RUN npm run build

FROM node:20-alpine AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1
ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

# Copier les fichiers nécessaires
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/start-production.sh ./

# Créer les dossiers avec permissions
RUN mkdir -p .data .next/cache && \
    chmod -R 777 .data .next/cache && \
    chmod +x start-production.sh

EXPOSE 3000

# POINT CRITIQUE: On utilise ENTRYPOINT et CMD ensemble
# ENTRYPOINT ne peut pas être override par Dokploy facilement
ENTRYPOINT ["/app/start-production.sh"]
# CMD peut être override mais sera passé en argument à l'ENTRYPOINT
CMD ["node", "server.js"]