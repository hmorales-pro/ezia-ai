#!/usr/bin/env node

/**
 * Diagnostic du syst√®me de g√©n√©ration de sites web
 * Ce script v√©rifie pourquoi le m√™me site est toujours g√©n√©r√©
 */

const fs = require('fs');
const path = require('path');

console.log('üîç DIAGNOSTIC DE LA G√âN√âRATION DE SITES WEB\n');
console.log('='.repeat(60) + '\n');

// 1. V√©rifier les routes de g√©n√©ration
console.log('1. ROUTES DE G√âN√âRATION\n');

const routes = [
  {
    path: './app/api/business/[businessId]/generate-website/route.ts',
    description: 'Route principale de g√©n√©ration'
  },
  {
    path: './app/api/ezia/create-website/route.ts',
    description: 'Route de cr√©ation du site'
  },
  {
    path: './app/api/ask-ai/route.ts',
    description: 'Route d\'appel √† l\'IA'
  }
];

routes.forEach(route => {
  if (fs.existsSync(route.path)) {
    console.log(`‚úÖ ${route.description}: ${route.path}`);
    const content = fs.readFileSync(route.path, 'utf8');
    
    // Analyser le contenu
    if (content.includes('getDefaultHTML') || content.includes('getDefaultCSS')) {
      console.log('   ‚ö†Ô∏è  Utilise des templates par d√©faut');
    }
    
    if (content.includes('fallback')) {
      console.log('   ‚ö†Ô∏è  Contient du code de fallback');
    }
    
    if (content.includes('business.website_prompt')) {
      console.log('   ‚úÖ Utilise le prompt du business');
    }
    
    if (content.includes('HTML et CSS pour ce site web')) {
      console.log('   ‚úÖ Demande la g√©n√©ration HTML/CSS √† l\'IA');
    }
  } else {
    console.log(`‚ùå ${route.description}: Non trouv√©`);
  }
});

// 2. Analyser le flux de g√©n√©ration
console.log('\n2. FLUX DE G√âN√âRATION\n');

const generateWebsiteRoute = './app/api/business/[businessId]/generate-website/route.ts';
if (fs.existsSync(generateWebsiteRoute)) {
  const content = fs.readFileSync(generateWebsiteRoute, 'utf8');
  
  console.log('Analyse du flux:');
  
  // V√©rifier l'appel √† l'API ask-ai
  if (content.includes('fetch(`${req.nextUrl.origin}/api/ask-ai`')) {
    console.log('‚úÖ Appelle l\'API ask-ai');
    
    // V√©rifier le parsing de la r√©ponse
    const jsonParseMatch = content.match(/JSON\.parse\(aiData\.(content|response)/);
    if (jsonParseMatch) {
      console.log('‚úÖ Tente de parser la r√©ponse JSON de l\'IA');
    }
    
    // V√©rifier la gestion d'erreur
    if (content.includes('catch')) {
      console.log('‚ö†Ô∏è  Gestion d\'erreur pr√©sente - peut tomber sur le d√©faut');
    }
  }
  
  // V√©rifier l'appel √† create-website
  if (content.includes('fetch(`${req.nextUrl.origin}/api/ezia/create-website`')) {
    console.log('‚úÖ Appelle l\'API create-website');
    
    // V√©rifier les param√®tres
    if (content.includes('html: html || undefined')) {
      console.log('‚ö†Ô∏è  Passe html ou undefined');
    }
    if (content.includes('css: css || undefined')) {
      console.log('‚ö†Ô∏è  Passe css ou undefined');
    }
  }
}

// 3. Analyser le template par d√©faut
console.log('\n3. TEMPLATE PAR D√âFAUT\n');

const createWebsiteRoute = './app/api/ezia/create-website/route.ts';
if (fs.existsSync(createWebsiteRoute)) {
  const content = fs.readFileSync(createWebsiteRoute, 'utf8');
  
  // Chercher les fonctions de d√©faut
  const defaultHTMLMatch = content.match(/function getDefaultHTML.*?\n}/s);
  const defaultCSSMatch = content.match(/function getDefaultCSS.*?\n}/s);
  
  if (defaultHTMLMatch) {
    console.log('‚ö†Ô∏è  Fonction getDefaultHTML trouv√©e');
    if (content.includes('${html || getDefaultHTML(')) {
      console.log('   ‚Üí Utilise le HTML par d√©faut si pas de HTML fourni');
    }
  }
  
  if (defaultCSSMatch) {
    console.log('‚ö†Ô∏è  Fonction getDefaultCSS trouv√©e');
    if (content.includes('${css || getDefaultCSS()')) {
      console.log('   ‚Üí Utilise le CSS par d√©faut si pas de CSS fourni');
    }
  }
}

// 4. V√©rifier les variables d'environnement
console.log('\n4. VARIABLES D\'ENVIRONNEMENT\n');

const envVars = [
  'HF_TOKEN',
  'DEFAULT_HF_TOKEN',
  'MONGODB_URI',
  'NEXT_APP_API_URL'
];

envVars.forEach(varName => {
  if (process.env[varName]) {
    console.log(`‚úÖ ${varName}: D√©fini`);
  } else {
    console.log(`‚ùå ${varName}: Non d√©fini`);
  }
});

// 5. Analyser les probl√®mes potentiels
console.log('\n5. DIAGNOSTIC DES PROBL√àMES\n');

console.log('üî¥ Probl√®me identifi√©: Le site utilise toujours le template par d√©faut\n');

console.log('Causes possibles:');
console.log('1. L\'IA ne r√©pond pas au format JSON attendu');
console.log('   ‚Üí La r√©ponse n\'est pas pars√©e correctement');
console.log('   ‚Üí Le code tombe dans le catch et utilise null');
console.log('');
console.log('2. Le prompt envoy√© √† l\'IA n\'est pas assez clair');
console.log('   ‚Üí L\'IA ne comprend pas qu\'elle doit retourner un objet JSON');
console.log('');
console.log('3. L\'API ask-ai a des probl√®mes avec le streaming');
console.log('   ‚Üí La r√©ponse n\'est pas compl√®te ou mal format√©e');
console.log('');

// 6. Recommandations
console.log('\n6. RECOMMANDATIONS DE FIX\n');

console.log('Pour corriger le probl√®me:');
console.log('');
console.log('1. Modifier /app/api/business/[businessId]/generate-website/route.ts:');
console.log('   - Am√©liorer le prompt pour √™tre plus explicite sur le format JSON');
console.log('   - Ajouter des logs pour voir la r√©ponse exacte de l\'IA');
console.log('   - Am√©liorer la gestion d\'erreur pour ne pas silencieusement utiliser le d√©faut');
console.log('');
console.log('2. Modifier /app/api/ask-ai/route.ts:');
console.log('   - S\'assurer que businessId est bien g√©r√©');
console.log('   - V√©rifier que la r√©ponse est bien format√©e pour les sites web');
console.log('   - Potentiellement d√©sactiver le streaming pour les g√©n√©rations de sites');
console.log('');
console.log('3. Tester avec un prompt simple:');
console.log('   - Cr√©er un endpoint de test qui appelle directement l\'IA');
console.log('   - V√©rifier que l\'IA r√©pond bien au format attendu');
console.log('');

// 7. V√©rifier l'utilisation de Mistral
console.log('\n7. UTILISATION DE MISTRAL\n');

const askAiRoute = './app/api/ask-ai/route.ts';
if (fs.existsSync(askAiRoute)) {
  const content = fs.readFileSync(askAiRoute, 'utf8');
  
  if (content.includes('mistral')) {
    console.log('‚úÖ Mistral est mentionn√© dans le code');
  }
  
  if (content.includes('selectedModel.value')) {
    console.log('‚úÖ Utilise le mod√®le s√©lectionn√©');
  }
  
  if (content.includes('PROVIDERS')) {
    console.log('‚úÖ Utilise le syst√®me de providers');
  }
}

console.log('\n' + '='.repeat(60));
console.log('\nüìã R√âSUM√â: Le syst√®me utilise toujours le template par d√©faut');
console.log('   car la r√©ponse de l\'IA n\'est pas correctement pars√©e.\n');