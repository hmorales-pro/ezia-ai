import { CompleteWebsite } from "./agents/multi-page-builder";

/**
 * ZIP Exporter Service
 * Generates a complete downloadable ZIP file with all website files
 *
 * Structure:
 * website.zip
 * ├── index.html
 * ├── blog/
 * │   ├── index.html
 * │   └── article-*.html
 * ├── a-propos.html
 * ├── services.html
 * ├── contact.html
 * ├── mentions-legales.html
 * ├── cgv.html
 * ├── 404.html
 * ├── assets/
 * │   ├── css/
 * │   │   └── style.css
 * │   └── js/
 * │       └── main.js
 * ├── sitemap.xml
 * └── robots.txt
 */
export class ZipExporter {
  /**
   * Generate sitemap.xml
   */
  static generateSitemap(website: CompleteWebsite, baseUrl: string): string {
    const pages = website.pages.map(page => {
      const url = `${baseUrl}${page.path}`;
      const priority = this.getPriority(page.type);
      const changefreq = this.getChangeFreq(page.type);

      return `  <url>
    <loc>${url}</loc>
    <lastmod>${new Date().toISOString().split('T')[0]}</lastmod>
    <changefreq>${changefreq}</changefreq>
    <priority>${priority}</priority>
  </url>`;
    });

    return `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
${pages.join('\n')}
</urlset>`;
  }

  /**
   * Generate robots.txt
   */
  static generateRobotsTxt(baseUrl: string): string {
    return `# Generated by Ezia AI
User-agent: *
Allow: /

Sitemap: ${baseUrl}/sitemap.xml
`;
  }

  /**
   * Generate README.md with deployment instructions
   */
  static generateReadme(businessName: string): string {
    return `# ${businessName} - Site Web

Site web généré automatiquement par **Ezia AI**.

## 🚀 Déploiement

### Option 1: Hébergement statique (recommandé)

**Netlify** (gratuit):
1. Glissez-déposez ce dossier sur [netlify.com/drop](https://app.netlify.com/drop)
2. Votre site est en ligne en 30 secondes !

**Vercel** (gratuit):
\`\`\`bash
npm i -g vercel
cd [ce-dossier]
vercel --prod
\`\`\`

**GitHub Pages** (gratuit):
1. Créez un repo GitHub
2. Uploadez ces fichiers
3. Activez GitHub Pages dans Settings

### Option 2: Serveur web classique

Uploadez tous les fichiers via FTP/SFTP sur votre serveur.

**Configuration Apache** (.htaccess):
\`\`\`apache
# Activer la réécriture d'URL
RewriteEngine On

# Page 404 personnalisée
ErrorDocument 404 /404.html

# Compression GZIP
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html text/css application/javascript
</IfModule>

# Cache
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType text/css "access plus 1 year"
  ExpiresByType application/javascript "access plus 1 year"
</IfModule>
\`\`\`

**Configuration Nginx**:
\`\`\`nginx
server {
    listen 80;
    server_name votredomaine.com;
    root /var/www/html;
    index index.html;

    # Page 404
    error_page 404 /404.html;

    # Compression
    gzip on;
    gzip_types text/css application/javascript;

    # Cache
    location ~* \\.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
\`\`\`

## 📁 Structure

\`\`\`
.
├── index.html              # Page d'accueil
├── blog/
│   ├── index.html          # Liste des articles
│   └── article-*.html      # Articles individuels
├── a-propos.html           # À propos
├── services.html           # Services/Produits
├── contact.html            # Contact
├── mentions-legales.html   # Mentions légales
├── cgv.html                # CGV
├── 404.html                # Page d'erreur
├── assets/
│   ├── css/
│   │   └── style.css       # Styles globaux
│   └── js/
│       └── main.js         # Scripts globaux
├── sitemap.xml             # Sitemap pour SEO
└── robots.txt              # Robots pour SEO
\`\`\`

## ✅ SEO & Performance

- ✅ HTML5 sémantique
- ✅ Meta tags optimisés
- ✅ Responsive design (mobile-first)
- ✅ Sitemap.xml généré
- ✅ Robots.txt configuré
- ✅ Images optimisées (SVG inline)
- ✅ Temps de chargement < 1s

## 🎨 Personnalisation

### Modifier les couleurs
Éditez \`assets/css/style.css\`, section \`:root\`:
\`\`\`css
:root {
  --color-primary: #2563EB;    /* Couleur principale */
  --color-secondary: #8B5CF6;  /* Couleur secondaire */
  --color-accent: #EC4899;     /* Couleur accent */
}
\`\`\`

### Modifier les textes
Éditez directement les fichiers HTML avec un éditeur de texte.

### Ajouter des images
1. Placez vos images dans \`assets/images/\`
2. Référencez-les: \`<img src="/assets/images/votre-image.jpg" alt="...">\`

## 📧 Formulaire de contact

Le formulaire est actuellement en mode demo. Pour l'activer:

**Option 1: Formspree** (gratuit):
\`\`\`html
<form action="https://formspree.io/f/YOUR_FORM_ID" method="POST">
  <!-- Vos champs -->
</form>
\`\`\`

**Option 2: Netlify Forms** (si hébergé sur Netlify):
\`\`\`html
<form netlify>
  <!-- Vos champs -->
</form>
\`\`\`

## 🔧 Support

Site généré le ${new Date().toLocaleDateString('fr-FR')} par **Ezia AI**.

Pour toute question: [ezia.ai](https://ezia.ai)
`;
  }

  /**
   * Create file structure for ZIP
   */
  static createFileStructure(website: CompleteWebsite, baseUrl: string): FileStructure {
    const files: FileStructure = {};

    // Add all HTML pages
    website.pages.forEach(page => {
      files[page.filename] = page.html;
    });

    // Add CSS
    files['assets/css/style.css'] = website.css;

    // Add JS
    files['assets/js/main.js'] = website.js;

    // Add sitemap
    files['sitemap.xml'] = this.generateSitemap(website, baseUrl);

    // Add robots.txt
    files['robots.txt'] = this.generateRobotsTxt(baseUrl);

    // Add README
    files['README.md'] = this.generateReadme(website.metadata.businessName);

    // Add .htaccess for Apache
    files['.htaccess'] = this.generateHtaccess();

    return files;
  }

  private static generateHtaccess(): string {
    return `# Generated by Ezia AI

# Page 404 personnalisée
ErrorDocument 404 /404.html

# Compression GZIP
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html text/plain text/css application/javascript application/json
</IfModule>

# Cache
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType text/html "access plus 0 seconds"
  ExpiresByType text/css "access plus 1 year"
  ExpiresByType application/javascript "access plus 1 year"
  ExpiresByType image/svg+xml "access plus 1 year"
</IfModule>

# Security headers
<IfModule mod_headers.c>
  Header set X-Content-Type-Options "nosniff"
  Header set X-Frame-Options "SAMEORIGIN"
  Header set X-XSS-Protection "1; mode=block"
</IfModule>
`;
  }

  private static getPriority(pageType: string): string {
    const priorities: Record<string, string> = {
      "homepage": "1.0",
      "services": "0.9",
      "about": "0.8",
      "blog-listing": "0.8",
      "contact": "0.7",
      "blog-article": "0.6",
      "legal": "0.3",
      "cgv": "0.3",
      "404": "0.1"
    };
    return priorities[pageType] || "0.5";
  }

  private static getChangeFreq(pageType: string): string {
    const frequencies: Record<string, string> = {
      "homepage": "weekly",
      "blog-listing": "daily",
      "blog-article": "monthly",
      "services": "monthly",
      "about": "monthly",
      "contact": "yearly",
      "legal": "yearly",
      "cgv": "yearly",
      "404": "yearly"
    };
    return frequencies[pageType] || "monthly";
  }
}

// Types
export interface FileStructure {
  [path: string]: string; // path -> content
}
