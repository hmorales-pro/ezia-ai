# Dockerfile de production qui fonctionne
FROM node:20-alpine AS builder

RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copier les fichiers de package
COPY package.json package-lock.json ./

# Installer toutes les dépendances
RUN npm ci || npm install

# Copier tout le code source
COPY . .

# Variables d'environnement pour le build
ENV NEXT_TELEMETRY_DISABLED=1
ENV SKIP_ENV_VALIDATION=1
ENV NODE_ENV=production
ENV MONGODB_URI="mongodb://localhost:27017/temp"

# Build de l'application
RUN npm run build

# Stage de production
FROM node:20-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Créer un utilisateur non-root
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copier les fichiers nécessaires depuis le builder
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# Créer les dossiers nécessaires et donner les permissions
RUN mkdir -p .data .next/cache && \
    chown -R nextjs:nodejs .data .next/cache && \
    chmod -R 755 .data .next/cache

# Changer pour l'utilisateur non-root
USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"]